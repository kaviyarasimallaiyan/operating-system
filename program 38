#include <stdio.h>
#include <stdlib.h>
#define MAX_CYLINDERS 5000
int findSeekTime(int current, int array[], int size, int direction) {
    int i, seek_time = 0;
    if (direction == 0) {
        for (i = current; i >= 0; i--) {
            if (array[i] != -1) {
                seek_time += abs(current - array[i]);
                current = array[i];
            }
        }
        current = 0;
        for (i = 0; i < size; i++) {
            if (array[i] != -1) {
                seek_time += abs(current - array[i]);
                current = array[i];
            }
        }
    }
    else {
        for (i = current; i < size; i++) {
            if (array[i] != -1) {
                seek_time += abs(current - array[i]);
                current = array[i];
            }
        }
        current = MAX_CYLINDERS - 1;
        for (i = size - 1; i >= 0; i--) {
            if (array[i] != -1) {
                seek_time += abs(current - array[i]);
                current = array[i];
            }
        }
    }

    return seek_time;
}

int main() {
    int requests[100], num_requests, start, i;
    printf("Enter the number of disk requests: ");
    scanf("%d", &num_requests);
    printf("Enter the disk requests: ");
    for (i = 0; i < num_requests; i++) {
        scanf("%d", &requests[i]);
    }
    printf("Enter the starting position of disk head: ");
    scanf("%d", &start);
    int left_seek_time = findSeekTime(start, requests, num_requests, 0);
    int right_seek_time = findSeekTime(start, requests, num_requests, 1);
    int seek_time, direction;
    if (left_seek_time <= right_seek_time) {
        seek_time = left_seek_time;
        direction = 0;
    } else {
        seek_time = right_seek_time;
        direction = 1;
    }
    printf("Direction: %s\n", direction == 0 ? "Left" : "Right");
    printf("Seek Time: %d\n", seek_time);

    return 0;
}
